package za.co.cipc.cipcmobile;

import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import userclasses.StateMachine;
import com.codename1.io.Log;
import com.codename1.io.NetworkManager;
import com.codename1.messaging.Message;
import com.codename1.push.Push;
import com.codename1.push.PushCallback;
import com.codename1.ui.CN;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.plaf.DefaultLookAndFeel;
import com.codename1.ui.plaf.UIManager;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Set;
import userclasses.Const;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class CIPC implements PushCallback {

    private Form current;
    private static int count = 0;

    public void init(Object context) {
        // Enable Toolbar on all Forms by default
        //Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
//        if (Display.getInstance().isSimulator()) {
//            Log.bindCrashProtection(false);
//        } else {//In production (on device)
        //Log.bindCrashProtection(true);
        //}
        UIManager.getInstance().setLookAndFeel(new DefaultLookAndFeel(UIManager.getInstance()) {
            @Override
            public void bind(Component cmp) {
                if (cmp instanceof Container) {
                    cmp.setScrollVisible(false);
                }
            }
        });

    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }

        Display.getInstance().callSerially(() -> {
            Hashtable meta = new Hashtable();
            meta.put(com.codename1.push.Push.GOOGLE_PUSH_KEY, "1002597205523");
            Display.getInstance().registerPush(meta, true);
            String deviceId = Push.getPushKey();

        });

        new StateMachine("/theme");
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

    @Override
    public void push(String value) {

        if (count == 1) {
            //Utility.showDialog("Notification", value);
            count = 0;
        }
    }

    @Override
    public void registeredForPush(String deviceId) {

        //Utility.showDialog("registeredForPush", deviceId);
        if (Display.getInstance().getPlatformName().toLowerCase().indexOf("ios") > -1) {
            deviceId = "cn1-ios-" + deviceId;
        } else if (Display.getInstance().getPlatformName().toLowerCase().indexOf("and") > -1) {
            deviceId = "cn1-gcm-" + deviceId;
        }

        Log.p("key is " + deviceId, Log.DEBUG);
        //Utility.showDialog("new deviceId", deviceId);

    }

    @Override
    public void pushRegistrationError(String error, int errorCode) {
        Log.p("error" + error + " errorCode=" + errorCode, Log.DEBUG);
    }
}
